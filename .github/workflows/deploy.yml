name: Python Package Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Tag and Deploy New Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Install dependencies and package
      - name: Install dependencies and package
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel pipenv twine semver
          pipenv install --system

      # Bump version and create a new tag
      - name: Bump version and create tag (if applicable)
        run: |
          commit_message=$(git log -1 --pretty=format:"%s")
          bump_type=$(echo $commit_message | cut -d "[" -f2 | cut -d "]" -f1)

          case "$bump_type" in
            "patch") ;&
            "minor") ;&
            "major")
              current_version=$(python -c "import awyes; print(awyes.__version__)")
              new_version=$(python -c "import semver; print(semver.bump_$bump_type('$current_version'))")

              echo "Bumping version from $current_version to $new_version"
              echo "__version__ = \"$new_version\"" > awyes/__init__.py

              git config user.name "trumanpurnell"
              git config user.email "truman.purnell@gmail.com"
              git commit -am "[$bump_type]: $new_version"
              git tag $new_version
              ;;
            *) ;;
          esac

      # Push the new tag to the repository
      - name: Push new tag
        if: github.ref == 'refs/heads/main'
        run: |
          git push origin main
          git push origin --tags

      # Publish the package to PyPI
      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: trumanpurnell
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          commit_message=$(git log -1 --pretty=format:"%s")
          bump_type=$(echo $commit_message | cut -d "[" -f2 | cut -d "]" -f1)

          case "$bump_type" in
            "patch") ;&
            "minor") ;&
            "major")
              python setup.py sdist bdist_wheel
              twine upload dist/*
              ;;
            *) ;;
          esac
